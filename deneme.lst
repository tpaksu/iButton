CCS PCM C Compiler, Version 3.245, 28193               22-Oca-07 20:56

               Filename: C:\Documents and Settings\Trevor LeMorte\Desktop\Elektronik\ibutton þifreli kilit\deneme.lst

               ROM used: 2026 words (99%)
                         Largest free fragment is 22
               RAM used: 33 (19%) at main() level
                         66 (38%) worst case
               Stack:    5 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   594
0003:  NOP
.................... #include "deneme.h" 
.................... #include <16F628.h> 
.................... //////// Standard Header file for the PIC16F628 device //////////////// 
.................... #device PIC16F628 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES INTRC_IO              	//Internal RC Osc, no CLKOUT 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOLVP                 	//No Low voltage programming 
....................  
.................... #use delay(clock=4000000) 
*
0197:  MOVLW  44
0198:  MOVWF  04
0199:  MOVF   00,W
019A:  BTFSC  03.2
019B:  GOTO   1AB
019C:  MOVLW  01
019D:  MOVWF  78
019E:  CLRF   77
019F:  DECFSZ 77,F
01A0:  GOTO   19F
01A1:  DECFSZ 78,F
01A2:  GOTO   19E
01A3:  MOVLW  4A
01A4:  MOVWF  77
01A5:  DECFSZ 77,F
01A6:  GOTO   1A5
01A7:  NOP
01A8:  NOP
01A9:  DECFSZ 00,F
01AA:  GOTO   19C
01AB:  RETLW  00
.................... #define TOUCH_DEVICE   PIN_B3 
....................  
.................... #include "TOUCH.C" 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                        Dallas Touch Driver                        //// 
.................... ////                                                                   //// 
.................... ////  present = touch_present()   Issues a reset and returns TRUE      //// 
.................... ////                              if the touch device is there.        //// 
.................... ////                                                                   //// 
.................... ////  data = touch_read_BYTE()    Reads one BYTE from a touch device.  //// 
.................... ////                                                                   //// 
.................... ////  ok = touch_write_BYTE(data) Writes one BYTE to a touch device    //// 
.................... ////                              and returns TRUE if all went OK.     //// 
.................... ////                              A FALSE indicates a collision with   //// 
.................... ////                              another device.                      //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2003 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifndef TOUCH_PIN 
....................    #define TOUCH_PIN  PIN_B3 
.................... #endif 
....................  
....................  
.................... BYTE touch_read_byte() { 
....................    BYTE i,data; 
....................  
....................    for(i=1;i<=8;++i) { 
*
036D:  MOVLW  01
036E:  MOVWF  44
036F:  MOVF   44,W
0370:  SUBLW  08
0371:  BTFSS  03.0
0372:  GOTO   391
....................      output_low(TOUCH_PIN); 
0373:  BSF    03.5
0374:  BCF    06.3
0375:  BCF    03.5
0376:  BCF    06.3
....................      delay_us(14); 
0377:  MOVLW  04
0378:  MOVWF  77
0379:  DECFSZ 77,F
037A:  GOTO   379
037B:  NOP
....................      output_float(TOUCH_PIN); 
037C:  BSF    03.5
037D:  BSF    06.3
....................      delay_us(5); 
037E:  NOP
037F:  NOP
0380:  NOP
0381:  NOP
0382:  NOP
....................      shift_right(&data,1,input(TOUCH_PIN)); 
0383:  BSF    06.3
0384:  BCF    03.5
0385:  BTFSC  06.3
0386:  GOTO   389
0387:  BCF    03.0
0388:  GOTO   38A
0389:  BSF    03.0
038A:  RRF    45,F
....................      delay_us(100); 
038B:  MOVLW  21
038C:  MOVWF  77
038D:  DECFSZ 77,F
038E:  GOTO   38D
....................    } 
038F:  INCF   44,F
0390:  GOTO   36F
....................    return(data); 
0391:  MOVF   45,W
0392:  MOVWF  78
.................... } 
....................  
.................... BYTE touch_write_byte(BYTE data) { 
....................    BYTE i; 
....................  
....................    for(i=1;i<=8;++i) { 
*
0326:  MOVLW  01
0327:  MOVWF  44
0328:  MOVF   44,W
0329:  SUBLW  08
032A:  BTFSS  03.0
032B:  GOTO   363
....................      output_low(TOUCH_PIN); 
032C:  BSF    03.5
032D:  BCF    06.3
032E:  BCF    03.5
032F:  BCF    06.3
....................      delay_us(10); 
0330:  MOVLW  03
0331:  MOVWF  77
0332:  DECFSZ 77,F
0333:  GOTO   332
....................      if(shift_right(&data,1,0)) { 
0334:  BCF    03.0
0335:  RRF    43,F
0336:  BTFSS  03.0
0337:  GOTO   346
....................        output_high(TOUCH_PIN); 
0338:  BSF    03.5
0339:  BCF    06.3
033A:  BCF    03.5
033B:  BSF    06.3
....................        delay_us(10); 
033C:  MOVLW  03
033D:  MOVWF  77
033E:  DECFSZ 77,F
033F:  GOTO   33E
.................... 		 if(!input_state(TOUCH_PIN)) 
0340:  BTFSC  06.3
0341:  GOTO   345
....................          return(0); 
0342:  MOVLW  00
0343:  MOVWF  78
0344:  GOTO   365
....................      } else { 
0345:  GOTO   353
....................        output_low(TOUCH_PIN); 
0346:  BSF    03.5
0347:  BCF    06.3
0348:  BCF    03.5
0349:  BCF    06.3
....................        delay_us(10); 
034A:  MOVLW  03
034B:  MOVWF  77
034C:  DECFSZ 77,F
034D:  GOTO   34C
.................... 		 if(input_state(TOUCH_PIN)) 
034E:  BTFSS  06.3
034F:  GOTO   353
....................             return(0); 
0350:  MOVLW  00
0351:  MOVWF  78
0352:  GOTO   365
....................      } 
....................      delay_us(50); 
0353:  MOVLW  10
0354:  MOVWF  77
0355:  DECFSZ 77,F
0356:  GOTO   355
0357:  NOP
....................      output_high(TOUCH_PIN); 
0358:  BSF    03.5
0359:  BCF    06.3
035A:  BCF    03.5
035B:  BSF    06.3
....................      delay_us(50); 
035C:  MOVLW  10
035D:  MOVWF  77
035E:  DECFSZ 77,F
035F:  GOTO   35E
0360:  NOP
....................    } 
0361:  INCF   44,F
0362:  GOTO   328
....................    return(TRUE); 
0363:  MOVLW  01
0364:  MOVWF  78
.................... } 
....................  
.................... BYTE touch_present() { 
....................     BOOLEAN present; 
....................  
....................     output_low(TOUCH_PIN); 
*
02E5:  BSF    03.5
02E6:  BCF    06.3
02E7:  BCF    03.5
02E8:  BCF    06.3
....................     delay_us(500); 
02E9:  MOVLW  A6
02EA:  MOVWF  77
02EB:  DECFSZ 77,F
02EC:  GOTO   2EB
02ED:  NOP
....................     output_float(TOUCH_PIN); 
02EE:  BSF    03.5
02EF:  BSF    06.3
....................  
....................     delay_us(5); 
02F0:  NOP
02F1:  NOP
02F2:  NOP
02F3:  NOP
02F4:  NOP
....................  
....................     if(!input(TOUCH_PIN)) 
02F5:  BSF    06.3
02F6:  BCF    03.5
02F7:  BTFSC  06.3
02F8:  GOTO   2FC
....................       return(FALSE); 
02F9:  MOVLW  00
02FA:  MOVWF  78
02FB:  GOTO   318
....................     delay_us(65); 
02FC:  MOVLW  15
02FD:  MOVWF  77
02FE:  DECFSZ 77,F
02FF:  GOTO   2FE
0300:  NOP
....................     present=!input(TOUCH_PIN); 
0301:  BSF    03.5
0302:  BSF    06.3
0303:  BCF    03.5
0304:  BTFSS  06.3
0305:  GOTO   308
0306:  BCF    43.0
0307:  GOTO   309
0308:  BSF    43.0
....................     delay_us(240); 
0309:  MOVLW  4F
030A:  MOVWF  77
030B:  DECFSZ 77,F
030C:  GOTO   30B
030D:  NOP
030E:  NOP
....................     if(present) 
030F:  BTFSS  43.0
0310:  GOTO   315
....................       return(TRUE); 
0311:  MOVLW  01
0312:  MOVWF  78
0313:  GOTO   318
....................     else 
0314:  GOTO   318
....................       return(FALSE); 
0315:  MOVLW  00
0316:  MOVWF  78
0317:  GOTO   318
.................... } 
0318:  RETLW  00
....................  
.................... #include "LCD.C" 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCDD.C                                //// 
.................... ////                 Driver for common LCD modules                     //// 
.................... ////                                                                   //// 
.................... ////  lcd_init()   Must be called before any other function.           //// 
.................... ////                                                                   //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.     //// 
.................... ////                     The following have special meaning:           //// 
.................... ////                      \f  Clear display                            //// 
.................... ////                      \n  Go to start of second line               //// 
.................... ////                      \b  Move back one position                   //// 
.................... ////                                                                   //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)    //// 
.................... ////                                                                   //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD         //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2003 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // As defined in the following structure the pin connection is as follows: 
.................... //     D0  enable 
.................... //     D1  rs 
.................... //     D2  rw 
.................... //     D4  D4 
.................... //     D5  D5 
.................... //     D6  D6 
.................... //     D7  D7 
.................... // 
.................... //   LCD pins D0-D3 are not used and PIC D3 is not used. 
....................  
.................... // Un-comment the following define to use port B 
.................... #define use_portb_lcd TRUE 
....................  
....................  
.................... struct lcd_pin_map {                 // This structure is overlayed 
....................            BOOLEAN enable;           // on to an I/O port to gain 
....................            BOOLEAN rs;               // access to the LCD pins. 
....................            BOOLEAN rw;               // The bits are allocated from 
....................            BOOLEAN unused;           // low order up.  ENABLE will 
....................            int     data : 4;         // be pin B0. 
....................         } lcd; 
....................  
....................  
.................... #if defined(__PCH__) 
.................... #if defined use_portb_lcd 
....................    #byte lcd = 0xF81                   // This puts the entire structure 
.................... #else 
....................    #byte lcd = 0xF83                   // This puts the entire structure 
.................... #endif 
.................... #else 
.................... #if defined use_portb_lcd 
....................    #byte lcd = 6                  // on to port B (at address 6) 
.................... #else 
....................    #byte lcd = 8                 // on to port D (at address 8) 
.................... #endif 
.................... #endif 
....................  
.................... #if defined use_portb_lcd 
....................    #define set_tris_lcd(x) set_tris_b(x) 
.................... #else 
....................    #define set_tris_lcd(x) set_tris_d(x) 
.................... #endif 
....................  
....................  
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #define lcd_line_two 0x40    // LCD RAM address for the second line 
....................  
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
....................  
....................                              // The following are used for setting 
....................                              // the I/O port direction register. 
....................  
.................... struct lcd_pin_map const LCD_WRITE = {0,0,0,0,0}; // For write mode all pins are out 
.................... struct lcd_pin_map const LCD_READ = {0,0,0,0,15}; // For read mode data pins are in 
....................  
....................  
....................  
.................... BYTE lcd_read_byte() { 
....................       BYTE low,high; 
....................       set_tris_lcd(LCD_READ); 
*
01BA:  MOVLW  F0
01BB:  TRIS   6
....................       lcd.rw = 1; 
01BC:  BSF    06.2
....................       delay_cycles(1); 
01BD:  NOP
....................       lcd.enable = 1; 
01BE:  BSF    06.0
....................       delay_cycles(1); 
01BF:  NOP
....................       high = lcd.data; 
01C0:  MOVF   06,W
01C1:  SWAPF  06,W
01C2:  ANDLW  0F
01C3:  MOVWF  46
....................       lcd.enable = 0; 
01C4:  BCF    06.0
....................       delay_cycles(1); 
01C5:  NOP
....................       lcd.enable = 1; 
01C6:  BSF    06.0
....................       delay_us(1); 
01C7:  NOP
....................       low = lcd.data; 
01C8:  MOVF   06,W
01C9:  SWAPF  06,W
01CA:  ANDLW  0F
01CB:  MOVWF  45
....................       lcd.enable = 0; 
01CC:  BCF    06.0
....................       set_tris_lcd(LCD_WRITE); 
01CD:  MOVLW  00
01CE:  TRIS   6
....................       return( (high<<4) | low); 
01CF:  SWAPF  46,W
01D0:  MOVWF  77
01D1:  MOVLW  F0
01D2:  ANDWF  77,F
01D3:  MOVF   77,W
01D4:  IORWF  45,W
01D5:  MOVWF  78
.................... } 
....................  
....................  
.................... void lcd_send_nibble( BYTE n ) { 
....................       lcd.data = n; 
*
01AC:  SWAPF  46,W
01AD:  ANDLW  F0
01AE:  MOVWF  77
01AF:  MOVLW  0F
01B0:  ANDWF  06,W
01B1:  IORWF  77,W
01B2:  MOVWF  06
....................       delay_cycles(1); 
01B3:  NOP
....................       lcd.enable = 1; 
01B4:  BSF    06.0
....................       delay_us(2); 
01B5:  NOP
01B6:  NOP
....................       lcd.enable = 0; 
01B7:  BCF    06.0
.................... } 
01B8:  RETLW  00
....................  
....................  
.................... void lcd_send_byte( BYTE address, BYTE n ) { 
....................  
....................       lcd.rs = 0; 
01B9:  BCF    06.1
....................       while ( bit_test(lcd_read_byte(),7) ) ; 
*
01D6:  MOVF   78,W
01D7:  MOVWF  45
01D8:  BTFSC  45.7
01D9:  GOTO   1BA
....................       lcd.rs = address; 
01DA:  BTFSS  43.0
01DB:  BCF    06.1
01DC:  BTFSC  43.0
01DD:  BSF    06.1
....................       delay_cycles(1); 
01DE:  NOP
....................       lcd.rw = 0; 
01DF:  BCF    06.2
....................       delay_cycles(1); 
01E0:  NOP
....................       lcd.enable = 0; 
01E1:  BCF    06.0
....................       lcd_send_nibble(n >> 4); 
01E2:  SWAPF  44,W
01E3:  MOVWF  45
01E4:  MOVLW  0F
01E5:  ANDWF  45,F
01E6:  MOVF   45,W
01E7:  MOVWF  46
01E8:  CALL   1AC
....................       lcd_send_nibble(n & 0xf); 
01E9:  MOVF   44,W
01EA:  ANDLW  0F
01EB:  MOVWF  45
01EC:  MOVWF  46
01ED:  CALL   1AC
.................... } 
01EE:  RETLW  00
....................  
....................  
.................... void lcd_init() { 
....................     BYTE i; 
....................     set_tris_lcd(LCD_WRITE); 
01EF:  MOVLW  00
01F0:  TRIS   6
....................     lcd.rs = 0; 
01F1:  BCF    06.1
....................     lcd.rw = 0; 
01F2:  BCF    06.2
....................     lcd.enable = 0; 
01F3:  BCF    06.0
....................     delay_ms(15); 
01F4:  MOVLW  0F
01F5:  MOVWF  44
01F6:  CALL   197
....................     for(i=1;i<=3;++i) { 
01F7:  MOVLW  01
01F8:  MOVWF  39
01F9:  MOVF   39,W
01FA:  SUBLW  03
01FB:  BTFSS  03.0
01FC:  GOTO   205
....................        lcd_send_nibble(3); 
01FD:  MOVLW  03
01FE:  MOVWF  46
01FF:  CALL   1AC
....................        delay_ms(5); 
0200:  MOVLW  05
0201:  MOVWF  44
0202:  CALL   197
....................     } 
0203:  INCF   39,F
0204:  GOTO   1F9
....................     lcd_send_nibble(2); 
0205:  MOVLW  02
0206:  MOVWF  46
0207:  CALL   1AC
....................     for(i=0;i<=3;++i) 
0208:  CLRF   39
0209:  MOVF   39,W
020A:  SUBLW  03
020B:  BTFSS  03.0
020C:  GOTO   216
....................        lcd_send_byte(0,LCD_INIT_STRING[i]); 
020D:  MOVF   39,W
020E:  CALL   004
020F:  MOVWF  3A
0210:  CLRF   43
0211:  MOVF   3A,W
0212:  MOVWF  44
0213:  CALL   1B9
0214:  INCF   39,F
0215:  GOTO   209
.................... } 
0216:  GOTO   5C4 (RETURN)
....................  
....................  
.................... void lcd_gotoxy( BYTE x, BYTE y) { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
*
022E:  DECFSZ 40,W
022F:  GOTO   231
0230:  GOTO   234
....................      address=lcd_line_two; 
0231:  MOVLW  40
0232:  MOVWF  41
....................    else 
0233:  GOTO   235
....................      address=0; 
0234:  CLRF   41
....................    address+=x-1; 
0235:  MOVLW  01
0236:  SUBWF  3F,W
0237:  ADDWF  41,F
....................    lcd_send_byte(0,0x80|address); 
0238:  MOVF   41,W
0239:  IORLW  80
023A:  MOVWF  42
023B:  CLRF   43
023C:  MOVF   42,W
023D:  MOVWF  44
023E:  CALL   1B9
.................... } 
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
*
0217:  MOVF   3E,W
0218:  XORLW  0C
0219:  BTFSC  03.2
021A:  GOTO   222
021B:  XORLW  06
021C:  BTFSC  03.2
021D:  GOTO   22A
021E:  XORLW  02
021F:  BTFSC  03.2
0220:  GOTO   240
0221:  GOTO   245
....................      case '\f'   : lcd_send_byte(0,1); 
0222:  CLRF   43
0223:  MOVLW  01
0224:  MOVWF  44
0225:  CALL   1B9
....................                    delay_ms(2); 
0226:  MOVLW  02
0227:  MOVWF  44
0228:  CALL   197
....................                                            break; 
0229:  GOTO   24B
....................      case '\n'   : lcd_gotoxy(1,2);        break; 
022A:  MOVLW  01
022B:  MOVWF  3F
022C:  MOVLW  02
022D:  MOVWF  40
*
023F:  GOTO   24B
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
0240:  CLRF   43
0241:  MOVLW  10
0242:  MOVWF  44
0243:  CALL   1B9
0244:  GOTO   24B
....................      default     : lcd_send_byte(1,c);     break; 
0245:  MOVLW  01
0246:  MOVWF  43
0247:  MOVF   3E,W
0248:  MOVWF  44
0249:  CALL   1B9
024A:  GOTO   24B
....................    } 
.................... } 
024B:  RETLW  00
....................  
.................... char lcd_getc( BYTE x, BYTE y) { 
....................    char value; 
....................  
....................     lcd_gotoxy(x,y); 
....................     while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................     lcd.rs=1; 
....................     value = lcd_read_byte(); 
....................     lcd.rs=0; 
....................     return(value); 
.................... } 
....................  
....................  
.................... #define eeprom_byte 16 
.................... #define bekleme 80 
.................... #define switch1	  pin_a0 
.................... #define switch2	  pin_a1 
.................... #define led_kirmizi pin_a2 
.................... #define led_yesil   pin_a3 
....................  
.................... BYTE Sil[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF}; 
*
0599:  MOVLW  FF
059A:  MOVWF  20
059B:  MOVWF  21
059C:  MOVWF  22
059D:  MOVWF  23
059E:  MOVWF  24
059F:  MOVWF  25
05A0:  MOVWF  26
05A1:  MOVWF  27
....................  
.................... void eepromyaz(unsigned char adres,unsigned char buffer[8]){ 
....................          unsigned char i; 
....................          for(i=8;i>0;i--){ 
*
03DF:  MOVLW  08
03E0:  MOVWF  43
03E1:  MOVF   43,F
03E2:  BTFSC  03.2
03E3:  GOTO   407
....................               write_eeprom(adres++,buffer[i-1]); 
03E4:  MOVF   3A,W
03E5:  INCF   3A,F
03E6:  MOVWF  44
03E7:  MOVLW  01
03E8:  SUBWF  43,W
03E9:  ADDWF  3B,W
03EA:  MOVWF  04
03EB:  MOVF   00,W
03EC:  MOVWF  46
03ED:  MOVF   44,W
03EE:  BSF    03.5
03EF:  MOVWF  1B
03F0:  BCF    03.5
03F1:  MOVF   46,W
03F2:  BSF    03.5
03F3:  MOVWF  1A
03F4:  BSF    1C.2
03F5:  BCF    03.5
03F6:  MOVF   0B,W
03F7:  MOVWF  77
03F8:  BCF    0B.7
03F9:  BSF    03.5
03FA:  MOVLW  55
03FB:  MOVWF  1D
03FC:  MOVLW  AA
03FD:  MOVWF  1D
03FE:  BSF    1C.1
03FF:  BTFSC  1C.1
0400:  GOTO   3FF
0401:  BCF    1C.2
0402:  MOVF   77,W
0403:  BCF    03.5
0404:  IORWF  0B,F
....................          } 
0405:  DECF   43,F
0406:  GOTO   3E1
.................... } 
0407:  RETLW  00
....................  
.................... char eepromoku(unsigned char adres){ 
....................          unsigned char i; 
....................          unsigned char bayt; 
....................          lcd_putc("\f"); 
*
0525:  CLRF   3C
0526:  MOVF   3C,W
0527:  CALL   00C
0528:  IORLW  00
0529:  BTFSC  03.2
052A:  GOTO   52F
052B:  INCF   3C,F
052C:  MOVWF  3E
052D:  CALL   217
052E:  GOTO   526
....................          printf(lcd_putc,"%X",adres); 
052F:  MOVF   39,W
0530:  MOVWF  3C
0531:  MOVLW  37
0532:  MOVWF  3D
0533:  CALL   504
....................          lcd_putc(":"); 
0534:  CLRF   3C
0535:  MOVF   3C,W
0536:  CALL   012
0537:  IORLW  00
0538:  BTFSC  03.2
0539:  GOTO   53E
053A:  INCF   3C,F
053B:  MOVWF  3E
053C:  CALL   217
053D:  GOTO   535
....................          for(i=3;i<7;i++){ 
053E:  MOVLW  03
053F:  MOVWF  3A
0540:  MOVF   3A,W
0541:  SUBLW  06
0542:  BTFSS  03.0
0543:  GOTO   55B
....................          bayt=read_eeprom(8*adres+i); 
0544:  RLF    39,W
0545:  MOVWF  77
0546:  RLF    77,F
0547:  RLF    77,F
0548:  MOVLW  F8
0549:  ANDWF  77,F
054A:  MOVF   77,W
054B:  ADDWF  3A,W
054C:  MOVWF  3D
054D:  BSF    03.5
054E:  MOVWF  1B
054F:  BCF    1C.7
0550:  BSF    1C.0
0551:  MOVF   1A,W
0552:  BCF    03.5
0553:  MOVWF  3B
....................          printf(lcd_putc,"%X",bayt); 
0554:  MOVF   3B,W
0555:  MOVWF  3C
0556:  MOVLW  37
0557:  MOVWF  3D
0558:  CALL   504
....................          } 
0559:  INCF   3A,F
055A:  GOTO   540
.................... } 
055B:  GOTO   738 (RETURN)
....................  
.................... int1 eepromkarsilastir(unsigned char numara[8]){ 
.................... unsigned char i,k,reg; 
.................... int sonuc; 
....................  
.................... reg=0; 
*
0408:  CLRF   45
.................... sonuc=0; 
0409:  CLRF   46
....................  
.................... for(i=0;i<eeprom_byte;i++){ 
040A:  CLRF   43
040B:  MOVF   43,W
040C:  SUBLW  0F
040D:  BTFSS  03.0
040E:  GOTO   4CA
.................... if (read_eeprom(reg)==numara[7] & read_eeprom(reg+1)==numara[6] & read_eeprom(reg+2)==numara[5] & read_eeprom(reg+3)==numara[4] & read_eeprom(reg+4)==numara[3] & read_eeprom(reg+5)==numara[2] & read_eeprom(reg+6)==numara[1] & read_eeprom(reg+7)==numara[0] ) { 
040F:  MOVF   45,W
0410:  BSF    03.5
0411:  MOVWF  1B
0412:  BCF    1C.7
0413:  BSF    1C.0
0414:  MOVF   1A,W
0415:  BCF    03.5
0416:  MOVWF  47
0417:  MOVLW  07
0418:  ADDWF  3B,W
0419:  MOVWF  04
041A:  MOVF   00,W
041B:  SUBWF  47,W
041C:  BTFSC  03.2
041D:  GOTO   420
041E:  MOVLW  00
041F:  GOTO   421
0420:  MOVLW  01
0421:  MOVWF  48
0422:  MOVLW  01
0423:  ADDWF  45,W
0424:  MOVWF  49
0425:  BSF    03.5
0426:  MOVWF  1B
0427:  BCF    1C.7
0428:  BSF    1C.0
0429:  MOVF   1A,W
042A:  BCF    03.5
042B:  MOVWF  4A
042C:  MOVLW  06
042D:  ADDWF  3B,W
042E:  MOVWF  04
042F:  MOVF   00,W
0430:  SUBWF  4A,W
0431:  BTFSC  03.2
0432:  GOTO   435
0433:  MOVLW  00
0434:  GOTO   436
0435:  MOVLW  01
0436:  ANDWF  48,W
0437:  MOVWF  4B
0438:  MOVLW  02
0439:  ADDWF  45,W
043A:  MOVWF  4C
043B:  BSF    03.5
043C:  MOVWF  1B
043D:  BCF    1C.7
043E:  BSF    1C.0
043F:  MOVF   1A,W
0440:  BCF    03.5
0441:  MOVWF  4D
0442:  MOVLW  05
0443:  ADDWF  3B,W
0444:  MOVWF  04
0445:  MOVF   00,W
0446:  SUBWF  4D,W
0447:  BTFSC  03.2
0448:  GOTO   44B
0449:  MOVLW  00
044A:  GOTO   44C
044B:  MOVLW  01
044C:  ANDWF  4B,W
044D:  MOVWF  4E
044E:  MOVLW  03
044F:  ADDWF  45,W
0450:  MOVWF  4F
0451:  BSF    03.5
0452:  MOVWF  1B
0453:  BCF    1C.7
0454:  BSF    1C.0
0455:  MOVF   1A,W
0456:  BCF    03.5
0457:  MOVWF  50
0458:  MOVLW  04
0459:  ADDWF  3B,W
045A:  MOVWF  04
045B:  MOVF   00,W
045C:  SUBWF  50,W
045D:  BTFSC  03.2
045E:  GOTO   461
045F:  MOVLW  00
0460:  GOTO   462
0461:  MOVLW  01
0462:  ANDWF  4E,W
0463:  MOVWF  51
0464:  MOVLW  04
0465:  ADDWF  45,W
0466:  MOVWF  52
0467:  BSF    03.5
0468:  MOVWF  1B
0469:  BCF    1C.7
046A:  BSF    1C.0
046B:  MOVF   1A,W
046C:  BCF    03.5
046D:  MOVWF  53
046E:  MOVLW  03
046F:  ADDWF  3B,W
0470:  MOVWF  04
0471:  MOVF   00,W
0472:  SUBWF  53,W
0473:  BTFSC  03.2
0474:  GOTO   477
0475:  MOVLW  00
0476:  GOTO   478
0477:  MOVLW  01
0478:  ANDWF  51,W
0479:  MOVWF  54
047A:  MOVLW  05
047B:  ADDWF  45,W
047C:  MOVWF  55
047D:  BSF    03.5
047E:  MOVWF  1B
047F:  BCF    1C.7
0480:  BSF    1C.0
0481:  MOVF   1A,W
0482:  BCF    03.5
0483:  MOVWF  56
0484:  MOVLW  02
0485:  ADDWF  3B,W
0486:  MOVWF  04
0487:  MOVF   00,W
0488:  SUBWF  56,W
0489:  BTFSC  03.2
048A:  GOTO   48D
048B:  MOVLW  00
048C:  GOTO   48E
048D:  MOVLW  01
048E:  ANDWF  54,W
048F:  MOVWF  57
0490:  MOVLW  06
0491:  ADDWF  45,W
0492:  MOVWF  58
0493:  BSF    03.5
0494:  MOVWF  1B
0495:  BCF    1C.7
0496:  BSF    1C.0
0497:  MOVF   1A,W
0498:  BCF    03.5
0499:  MOVWF  59
049A:  MOVLW  01
049B:  ADDWF  3B,W
049C:  MOVWF  04
049D:  MOVF   00,W
049E:  SUBWF  59,W
049F:  BTFSC  03.2
04A0:  GOTO   4A3
04A1:  MOVLW  00
04A2:  GOTO   4A4
04A3:  MOVLW  01
04A4:  ANDWF  57,W
04A5:  MOVWF  5A
04A6:  MOVLW  07
04A7:  ADDWF  45,W
04A8:  MOVWF  5B
04A9:  BSF    03.5
04AA:  MOVWF  1B
04AB:  BCF    1C.7
04AC:  BSF    1C.0
04AD:  MOVF   1A,W
04AE:  BCF    03.5
04AF:  MOVWF  5C
04B0:  MOVF   3B,W
04B1:  MOVWF  04
04B2:  MOVF   00,W
04B3:  SUBWF  5C,W
04B4:  BTFSC  03.2
04B5:  GOTO   4B8
04B6:  MOVLW  00
04B7:  GOTO   4B9
04B8:  MOVLW  01
04B9:  ANDWF  5A,W
04BA:  BTFSC  03.2
04BB:  GOTO   4C6
.................... if (reg==0){ 
04BC:  MOVF   45,F
04BD:  BTFSS  03.2
04BE:  GOTO   4C3
.................... sonuc=2; 
04BF:  MOVLW  02
04C0:  MOVWF  46
.................... break; 
04C1:  GOTO   4CA
.................... }else{ 
04C2:  GOTO   4C6
.................... sonuc=1; 
04C3:  MOVLW  01
04C4:  MOVWF  46
.................... break; 
04C5:  GOTO   4CA
.................... } 
.................... } 
.................... reg+=8; 
04C6:  MOVLW  08
04C7:  ADDWF  45,F
.................... } 
04C8:  INCF   43,F
04C9:  GOTO   40B
....................  
.................... return sonuc; 
04CA:  MOVF   46,W
04CB:  MOVWF  78
.................... } 
04CC:  RETLW  00
....................  
....................  
.................... char bosyerayarla(void){ 
.................... unsigned char i,reg,test; 
.................... int sonuc; 
....................  
.................... reg=0; 
*
024C:  CLRF   3A
.................... sonuc=8; 
024D:  MOVLW  08
024E:  MOVWF  3C
....................  
.................... for(i=0;i<eeprom_byte;i++){ 
024F:  CLRF   39
0250:  MOVF   39,W
0251:  SUBLW  0F
0252:  BTFSS  03.0
0253:  GOTO   2E2
....................  
.................... test = !read_eeprom(reg) | !read_eeprom(reg+1) | !read_eeprom(reg+2) | !read_eeprom(reg+3) | !read_eeprom(reg+4) | !read_eeprom(reg+5) | !read_eeprom(reg+6) | !read_eeprom(reg+7); 
0254:  MOVF   3A,W
0255:  BSF    03.5
0256:  MOVWF  1B
0257:  BCF    1C.7
0258:  BSF    1C.0
0259:  MOVF   1A,W
025A:  BTFSC  03.2
025B:  GOTO   25E
025C:  MOVLW  00
025D:  GOTO   25F
025E:  MOVLW  01
025F:  BCF    03.5
0260:  MOVWF  3D
0261:  MOVLW  01
0262:  ADDWF  3A,W
0263:  MOVWF  3E
0264:  BSF    03.5
0265:  MOVWF  1B
0266:  BCF    1C.7
0267:  BSF    1C.0
0268:  MOVF   1A,W
0269:  BTFSC  03.2
026A:  GOTO   26D
026B:  MOVLW  00
026C:  GOTO   26E
026D:  MOVLW  01
026E:  BCF    03.5
026F:  IORWF  3D,W
0270:  MOVWF  3F
0271:  MOVLW  02
0272:  ADDWF  3A,W
0273:  MOVWF  40
0274:  BSF    03.5
0275:  MOVWF  1B
0276:  BCF    1C.7
0277:  BSF    1C.0
0278:  MOVF   1A,W
0279:  BTFSC  03.2
027A:  GOTO   27D
027B:  MOVLW  00
027C:  GOTO   27E
027D:  MOVLW  01
027E:  BCF    03.5
027F:  IORWF  3F,W
0280:  MOVWF  41
0281:  MOVLW  03
0282:  ADDWF  3A,W
0283:  MOVWF  42
0284:  BSF    03.5
0285:  MOVWF  1B
0286:  BCF    1C.7
0287:  BSF    1C.0
0288:  MOVF   1A,W
0289:  BTFSC  03.2
028A:  GOTO   28D
028B:  MOVLW  00
028C:  GOTO   28E
028D:  MOVLW  01
028E:  BCF    03.5
028F:  IORWF  41,W
0290:  MOVWF  43
0291:  MOVLW  04
0292:  ADDWF  3A,W
0293:  MOVWF  44
0294:  BSF    03.5
0295:  MOVWF  1B
0296:  BCF    1C.7
0297:  BSF    1C.0
0298:  MOVF   1A,W
0299:  BTFSC  03.2
029A:  GOTO   29D
029B:  MOVLW  00
029C:  GOTO   29E
029D:  MOVLW  01
029E:  BCF    03.5
029F:  IORWF  43,W
02A0:  MOVWF  45
02A1:  MOVLW  05
02A2:  ADDWF  3A,W
02A3:  MOVWF  46
02A4:  BSF    03.5
02A5:  MOVWF  1B
02A6:  BCF    1C.7
02A7:  BSF    1C.0
02A8:  MOVF   1A,W
02A9:  BTFSC  03.2
02AA:  GOTO   2AD
02AB:  MOVLW  00
02AC:  GOTO   2AE
02AD:  MOVLW  01
02AE:  BCF    03.5
02AF:  IORWF  45,W
02B0:  MOVWF  47
02B1:  MOVLW  06
02B2:  ADDWF  3A,W
02B3:  MOVWF  48
02B4:  BSF    03.5
02B5:  MOVWF  1B
02B6:  BCF    1C.7
02B7:  BSF    1C.0
02B8:  MOVF   1A,W
02B9:  BTFSC  03.2
02BA:  GOTO   2BD
02BB:  MOVLW  00
02BC:  GOTO   2BE
02BD:  MOVLW  01
02BE:  BCF    03.5
02BF:  IORWF  47,W
02C0:  MOVWF  49
02C1:  MOVLW  07
02C2:  ADDWF  3A,W
02C3:  MOVWF  4A
02C4:  BSF    03.5
02C5:  MOVWF  1B
02C6:  BCF    1C.7
02C7:  BSF    1C.0
02C8:  MOVF   1A,W
02C9:  BTFSC  03.2
02CA:  GOTO   2CD
02CB:  MOVLW  00
02CC:  GOTO   2CE
02CD:  MOVLW  01
02CE:  BCF    03.5
02CF:  IORWF  49,W
02D0:  MOVWF  3B
.................... if (test==0) { 
02D1:  MOVF   3B,F
02D2:  BTFSS  03.2
02D3:  GOTO   2DE
.................... if (reg==0){ 
02D4:  MOVF   3A,F
02D5:  BTFSS  03.2
02D6:  GOTO   2DB
.................... sonuc=9; 
02D7:  MOVLW  09
02D8:  MOVWF  3C
.................... break; 
02D9:  GOTO   2E2
.................... }else{ 
02DA:  GOTO   2DE
.................... sonuc=i; 
02DB:  MOVF   39,W
02DC:  MOVWF  3C
.................... break; 
02DD:  GOTO   2E2
.................... } 
.................... } 
.................... reg+=8; 
02DE:  MOVLW  08
02DF:  ADDWF  3A,F
.................... } 
02E0:  INCF   39,F
02E1:  GOTO   250
....................  
.................... return sonuc; 
02E2:  MOVF   3C,W
02E3:  MOVWF  78
.................... } 
02E4:  RETLW  00
....................  
.................... void yesil(void){ 
.................... lcd_putc("\fTOM OK."); 
*
055C:  CLRF   39
055D:  MOVF   39,W
055E:  CALL   018
055F:  IORLW  00
0560:  BTFSC  03.2
0561:  GOTO   566
0562:  INCF   39,F
0563:  MOVWF  3E
0564:  CALL   217
0565:  GOTO   55D
.................... output_bit(led_yesil,1); 
0566:  BSF    05.3
0567:  BSF    03.5
0568:  BCF    05.3
.................... delay_ms(1000); 
0569:  MOVLW  04
056A:  BCF    03.5
056B:  MOVWF  39
056C:  MOVLW  FA
056D:  MOVWF  44
056E:  CALL   197
056F:  DECFSZ 39,F
0570:  GOTO   56C
.................... output_bit(led_yesil,0); 
0571:  BCF    05.3
0572:  BSF    03.5
0573:  BCF    05.3
.................... reset_cpu(); 
0574:  CLRF   0A
0575:  BCF    03.5
0576:  GOTO   000
.................... } 
0577:  RETLW  00
....................  
.................... void kirmizi(void){ 
.................... lcd_putc("\fTOM Gecersiz!"); 
0578:  CLRF   39
0579:  MOVF   39,W
057A:  CALL   025
057B:  IORLW  00
057C:  BTFSC  03.2
057D:  GOTO   582
057E:  INCF   39,F
057F:  MOVWF  3E
0580:  CALL   217
0581:  GOTO   579
.................... output_bit(led_kirmizi,1); 
0582:  BSF    05.2
0583:  BSF    03.5
0584:  BCF    05.2
.................... delay_ms(1000); 
0585:  MOVLW  04
0586:  BCF    03.5
0587:  MOVWF  39
0588:  MOVLW  FA
0589:  MOVWF  44
058A:  CALL   197
058B:  DECFSZ 39,F
058C:  GOTO   588
.................... output_bit(led_kirmizi,0); 
058D:  BCF    05.2
058E:  BSF    03.5
058F:  BCF    05.2
.................... reset_cpu(); 
0590:  CLRF   0A
0591:  BCF    03.5
0592:  GOTO   000
.................... } 
0593:  GOTO   7E8 (RETURN)
....................  
.................... int secimbekle(void){ 
.................... //buraya öyle bi kod yaz ki tuþu býraktýðýnda iþlem yapsýn.Basýlý olma özelliði olmasýn. 
.................... int i,secim,b1,b2; 
.................... secim=0; 
*
04CD:  CLRF   3A
.................... for(i=0;i<bekleme;i++){ 
04CE:  CLRF   39
04CF:  MOVF   39,W
04D0:  SUBLW  4F
04D1:  BTFSS  03.0
04D2:  GOTO   501
....................                   delay_ms(100); 
04D3:  MOVLW  64
04D4:  MOVWF  44
04D5:  CALL   197
.................... 				b1=input(switch1); 
04D6:  BSF    03.5
04D7:  BSF    05.0
04D8:  BCF    03.5
04D9:  CLRF   3B
04DA:  BTFSC  05.0
04DB:  INCF   3B,F
.................... 				b2=input(switch2); 
04DC:  BSF    03.5
04DD:  BSF    05.1
04DE:  BCF    03.5
04DF:  CLRF   3C
04E0:  BTFSC  05.1
04E1:  INCF   3C,F
....................             if (b1|b2){ 
04E2:  MOVF   3B,W
04E3:  IORWF  3C,W
04E4:  BTFSC  03.2
04E5:  GOTO   4FF
....................             if(b1){ 
04E6:  MOVF   3B,F
04E7:  BTFSC  03.2
04E8:  GOTO   4F2
.................... 				for(;;){ 
.................... 				if(!input(switch1)){ 
04E9:  BSF    03.5
04EA:  BSF    05.0
04EB:  BCF    03.5
04EC:  BTFSC  05.0
04ED:  GOTO   4F1
.................... 				secim=1; 
04EE:  MOVLW  01
04EF:  MOVWF  3A
.................... 				break; 
04F0:  GOTO   4F2
.................... 				}}} 
04F1:  GOTO   4E9
....................             if(b2){ 
04F2:  MOVF   3C,F
04F3:  BTFSC  03.2
04F4:  GOTO   4FE
.................... 				for(;;){ 
.................... 				if(!input(switch2)){ 
04F5:  BSF    03.5
04F6:  BSF    05.1
04F7:  BCF    03.5
04F8:  BTFSC  05.1
04F9:  GOTO   4FD
.................... 				secim=2; 
04FA:  MOVLW  02
04FB:  MOVWF  3A
.................... 				break; 
04FC:  GOTO   4FE
.................... 				} 
.................... 				} 
04FD:  GOTO   4F5
.................... 				} 
....................             break; 
04FE:  GOTO   501
....................                         }} 
04FF:  INCF   39,F
0500:  GOTO   4CF
....................  
....................    return secim; 
0501:  MOVF   3A,W
0502:  MOVWF  78
.................... } 
0503:  RETLW  00
....................  
.................... char butonoku(char buffer[8],char presenceCheck){ 
.................... char i; 
.................... while(!touch_present()) ; 
*
0319:  CALL   2E5
031A:  MOVF   78,F
031B:  BTFSC  03.2
031C:  GOTO   319
....................      delay_ms(200); 
031D:  MOVLW  C8
031E:  MOVWF  44
031F:  CALL   197
....................      if(touch_present()) { 
0320:  CALL   2E5
0321:  MOVF   78,F
0322:  BTFSC  03.2
0323:  GOTO   3DE
....................         touch_write_byte(0x33); 
0324:  MOVLW  33
0325:  MOVWF  43
....................         for(i=0;i<8;++i) 
*
0365:  CLRF   42
0366:  MOVF   42,W
0367:  SUBLW  07
0368:  BTFSS  03.0
0369:  GOTO   399
....................            buffer[i]=touch_read_byte(); 
036A:  MOVF   39,W
036B:  ADDWF  42,W
036C:  MOVWF  43
*
0393:  MOVF   43,W
0394:  MOVWF  04
0395:  MOVF   78,W
0396:  MOVWF  00
0397:  INCF   42,F
0398:  GOTO   366
....................         delay_ms(1000); 
0399:  MOVLW  04
039A:  MOVWF  43
039B:  MOVLW  FA
039C:  MOVWF  44
039D:  CALL   197
039E:  DECFSZ 43,F
039F:  GOTO   39B
....................  
....................         presenceCheck = buffer[0] & buffer[1] & buffer[2] & buffer[3] & buffer[4] & buffer[5] & buffer[6] & buffer[7]; 
03A0:  MOVF   39,W
03A1:  MOVWF  04
03A2:  MOVF   00,W
03A3:  MOVWF  43
03A4:  MOVLW  01
03A5:  ADDWF  39,W
03A6:  MOVWF  04
03A7:  MOVF   00,W
03A8:  ANDWF  43,W
03A9:  MOVWF  44
03AA:  MOVLW  02
03AB:  ADDWF  39,W
03AC:  MOVWF  04
03AD:  MOVF   00,W
03AE:  ANDWF  44,W
03AF:  MOVWF  45
03B0:  MOVLW  03
03B1:  ADDWF  39,W
03B2:  MOVWF  04
03B3:  MOVF   00,W
03B4:  ANDWF  45,W
03B5:  MOVWF  46
03B6:  MOVLW  04
03B7:  ADDWF  39,W
03B8:  MOVWF  04
03B9:  MOVF   00,W
03BA:  ANDWF  46,W
03BB:  MOVWF  47
03BC:  MOVLW  05
03BD:  ADDWF  39,W
03BE:  MOVWF  04
03BF:  MOVF   00,W
03C0:  ANDWF  47,W
03C1:  MOVWF  48
03C2:  MOVLW  06
03C3:  ADDWF  39,W
03C4:  MOVWF  04
03C5:  MOVF   00,W
03C6:  ANDWF  48,W
03C7:  MOVWF  49
03C8:  MOVLW  07
03C9:  ADDWF  39,W
03CA:  MOVWF  04
03CB:  MOVF   00,W
03CC:  ANDWF  49,W
03CD:  MOVWF  41
.................... 		  if(buffer[6]=0) presenceCheck=0xFF; 
03CE:  MOVLW  06
03CF:  ADDWF  39,W
03D0:  MOVWF  04
03D1:  CLRF   00
03D2:  MOVLW  00
03D3:  XORLW  00
03D4:  BTFSC  03.2
03D5:  GOTO   3D8
03D6:  MOVLW  FF
03D7:  MOVWF  41
.................... 			return buffer; 
03D8:  MOVF   39,W
03D9:  MOVWF  78
03DA:  GOTO   3DE
.................... 			return presenceCheck; 
03DB:  MOVF   41,W
03DC:  MOVWF  78
03DD:  GOTO   3DE
.................... }} 
03DE:  RETLW  00
....................  
.................... void main() 
.................... { 
*
0594:  CLRF   04
0595:  MOVLW  1F
0596:  ANDWF  03,F
0597:  MOVLW  07
0598:  MOVWF  1F
....................    unsigned CHAR buffer[8]; 
....................    int i,secim,secim2,k,l; 
....................    unsigned CHAR presenceCheck,temp,masteryok,yer; 
....................  
....................    port_b_pullups(TRUE); 
*
05A2:  BSF    03.5
05A3:  BCF    01.7
.................... 	setup_timer_0(RTCC_INTERNAL); 
05A4:  MOVF   01,W
05A5:  ANDLW  C0
05A6:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
05A7:  BCF    03.5
05A8:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
05A9:  MOVLW  00
05AA:  MOVWF  78
05AB:  MOVWF  12
05AC:  MOVLW  00
05AD:  BSF    03.5
05AE:  MOVWF  12
....................    setup_ccp1(CCP_OFF); 
05AF:  BSF    06.3
05B0:  BCF    03.5
05B1:  CLRF   17
05B2:  CLRF   17
....................    setup_comparator(NC_NC_NC_NC); 
05B3:  MOVLW  07
05B4:  MOVWF  1F
05B5:  BSF    03.5
05B6:  MOVF   05,W
05B7:  MOVLW  03
05B8:  MOVWF  77
05B9:  DECFSZ 77,F
05BA:  GOTO   5B9
05BB:  BCF    03.5
05BC:  MOVF   1F,W
05BD:  BCF    0C.6
....................    setup_vref(FALSE); 
05BE:  BSF    03.5
05BF:  CLRF   1F
.................... 	set_tris_b(0x08); 
05C0:  MOVLW  08
05C1:  TRIS   6
....................    lcd_init(); 
05C2:  BCF    03.5
05C3:  GOTO   1EF
....................  
....................    lcd_putc("\fHAZIR."); 
05C4:  CLRF   39
05C5:  MOVF   39,W
05C6:  CALL   038
05C7:  IORLW  00
05C8:  BTFSC  03.2
05C9:  GOTO   5CE
05CA:  INCF   39,F
05CB:  MOVWF  3E
05CC:  CALL   217
05CD:  GOTO   5C5
.................... 	masteryok=0; 
05CE:  CLRF   37
.................... 	if(bosyerayarla()==0x09){ 
05CF:  CALL   24C
05D0:  MOVF   78,W
05D1:  SUBLW  09
05D2:  BTFSS  03.2
05D3:  GOTO   5E0
.................... 	lcd_putc("\fMaster Tom Kaydi\nTom'u dokundurun"); 
05D4:  CLRF   39
05D5:  MOVF   39,W
05D6:  CALL   044
05D7:  IORLW  00
05D8:  BTFSC  03.2
05D9:  GOTO   5DE
05DA:  INCF   39,F
05DB:  MOVWF  3E
05DC:  CALL   217
05DD:  GOTO   5D5
.................... 	masteryok=1; 
05DE:  MOVLW  01
05DF:  MOVWF  37
.................... 	} 
....................  
....................    while (TRUE) { 
....................  
....................  
.................... 		butonoku(buffer,presenceCheck); 
05E0:  MOVLW  28
05E1:  MOVWF  39
05E2:  MOVF   35,W
05E3:  MOVWF  41
05E4:  CALL   319
....................  
....................       if (presenceCheck != 0xFF)     // iButton dokundurulmuþsa 
05E5:  INCFSZ 35,W
05E6:  GOTO   5E8
05E7:  GOTO   7E8
....................       { 
....................  
.................... 			if(masteryok){ 
05E8:  MOVF   37,F
05E9:  BTFSC  03.2
05EA:  GOTO   661
.................... 			eepromyaz(0,buffer); 
05EB:  CLRF   3A
05EC:  MOVLW  28
05ED:  MOVWF  3B
05EE:  CALL   3DF
.................... 			lcd_putc("\fDogrulama icin\ntekrar dokundur"); 
05EF:  CLRF   39
05F0:  MOVF   39,W
05F1:  CALL   06B
05F2:  IORLW  00
05F3:  BTFSC  03.2
05F4:  GOTO   5F9
05F5:  INCF   39,F
05F6:  MOVWF  3E
05F7:  CALL   217
05F8:  GOTO   5F0
.................... 			butonoku(buffer,presenceCheck); 
05F9:  MOVLW  28
05FA:  MOVWF  39
05FB:  MOVF   35,W
05FC:  MOVWF  41
05FD:  CALL   319
.................... 			for(i=0;i<bekleme;i++){ 
05FE:  CLRF   30
05FF:  MOVF   30,W
0600:  SUBLW  4F
0601:  BTFSS  03.0
0602:  GOTO   65F
.................... 			delay_ms(100); 
0603:  MOVLW  64
0604:  MOVWF  44
0605:  CALL   197
.................... 	      if (presenceCheck != 0xFF) { 
0606:  INCFSZ 35,W
0607:  GOTO   609
0608:  GOTO   65D
.................... 			k = eepromkarsilastir(buffer); 
0609:  MOVLW  28
060A:  MOVWF  3B
060B:  CALL   408
060C:  MOVF   78,W
060D:  MOVWF  33
.................... 			if(k==2){ 
060E:  MOVF   33,W
060F:  SUBLW  02
0610:  BTFSS  03.2
0611:  GOTO   62A
.................... 			lcd_putc("\fKayit Onaylandi"); 
0612:  CLRF   39
0613:  MOVF   39,W
0614:  CALL   08F
0615:  IORLW  00
0616:  BTFSC  03.2
0617:  GOTO   61C
0618:  INCF   39,F
0619:  MOVWF  3E
061A:  CALL   217
061B:  GOTO   613
.................... 			masteryok=0; 
061C:  CLRF   37
.................... 			for(i=0;i<10;i++) delay_ms(100); 
061D:  CLRF   30
061E:  MOVF   30,W
061F:  SUBLW  09
0620:  BTFSS  03.0
0621:  GOTO   627
0622:  MOVLW  64
0623:  MOVWF  44
0624:  CALL   197
0625:  INCF   30,F
0626:  GOTO   61E
.................... 			reset_cpu(); 
0627:  CLRF   0A
0628:  GOTO   000
.................... 			}else{ 
0629:  GOTO   65D
.................... 			lcd_putc("\fOnaylanmadi"); 
062A:  CLRF   39
062B:  MOVF   39,W
062C:  CALL   0A4
062D:  IORLW  00
062E:  BTFSC  03.2
062F:  GOTO   634
0630:  INCF   39,F
0631:  MOVWF  3E
0632:  CALL   217
0633:  GOTO   62B
.................... 			for(i=0;i<8;i++) write_eeprom(i,0xFF); 
0634:  CLRF   30
0635:  MOVF   30,W
0636:  SUBLW  07
0637:  BTFSS  03.0
0638:  GOTO   651
0639:  MOVF   30,W
063A:  BSF    03.5
063B:  MOVWF  1B
063C:  MOVLW  FF
063D:  MOVWF  1A
063E:  BSF    1C.2
063F:  BCF    03.5
0640:  MOVF   0B,W
0641:  MOVWF  77
0642:  BCF    0B.7
0643:  BSF    03.5
0644:  MOVLW  55
0645:  MOVWF  1D
0646:  MOVLW  AA
0647:  MOVWF  1D
0648:  BSF    1C.1
0649:  BTFSC  1C.1
064A:  GOTO   649
064B:  BCF    1C.2
064C:  MOVF   77,W
064D:  BCF    03.5
064E:  IORWF  0B,F
064F:  INCF   30,F
0650:  GOTO   635
.................... 			for(i=0;i<10;i++) delay_ms(100); 
0651:  CLRF   30
0652:  MOVF   30,W
0653:  SUBLW  09
0654:  BTFSS  03.0
0655:  GOTO   65B
0656:  MOVLW  64
0657:  MOVWF  44
0658:  CALL   197
0659:  INCF   30,F
065A:  GOTO   652
.................... 			reset_cpu(); 
065B:  CLRF   0A
065C:  GOTO   000
.................... 			} 
.................... 			} 
.................... 			} 
065D:  INCF   30,F
065E:  GOTO   5FF
.................... 			reset_cpu(); 
065F:  CLRF   0A
0660:  GOTO   000
.................... 			} 
....................  
....................  
....................  
....................          if(eepromkarsilastir(buffer)==1|eepromkarsilastir(buffer)==2){ 
0661:  MOVLW  28
0662:  MOVWF  3B
0663:  CALL   408
0664:  DECFSZ 78,W
0665:  GOTO   667
0666:  GOTO   669
0667:  MOVLW  00
0668:  GOTO   66A
0669:  MOVLW  01
066A:  MOVWF  3A
066B:  MOVLW  28
066C:  MOVWF  3B
066D:  CALL   408
066E:  MOVF   78,W
066F:  SUBLW  02
0670:  BTFSC  03.2
0671:  GOTO   674
0672:  MOVLW  00
0673:  GOTO   675
0674:  MOVLW  01
0675:  IORWF  3A,W
0676:  BTFSC  03.2
0677:  GOTO   7E7
....................             if(eepromkarsilastir(buffer)==2){ 
0678:  MOVLW  28
0679:  MOVWF  3B
067A:  CALL   408
067B:  MOVF   78,W
067C:  SUBLW  02
067D:  BTFSS  03.2
067E:  GOTO   7E5
....................             //Master Yetkili 
....................             lcd_putc("\fMaster yetkili\n<-Islem   Kapi->"); 
067F:  CLRF   39
0680:  MOVF   39,W
0681:  CALL   0B5
0682:  IORLW  00
0683:  BTFSC  03.2
0684:  GOTO   689
0685:  INCF   39,F
0686:  MOVWF  3E
0687:  CALL   217
0688:  GOTO   680
....................             secim = secimbekle(); 
0689:  CALL   4CD
068A:  MOVF   78,W
068B:  MOVWF  31
....................             switch(secim){ 
068C:  MOVF   31,W
068D:  BTFSC  03.2
068E:  GOTO   696
068F:  XORLW  01
0690:  BTFSC  03.2
0691:  GOTO   699
0692:  XORLW  03
0693:  BTFSC  03.2
0694:  GOTO   7E2
0695:  GOTO   7E4
....................             case 0: 
....................             //Seçim yapýlmamýþsa 
....................             reset_cpu(); 
0696:  CLRF   0A
0697:  GOTO   000
....................             break; 
0698:  GOTO   7E4
....................  
....................             //Seçim yapýlmýþsa 
....................             case 1: 
....................             //MASTER ISLEM'I SECTI 
.................... 				islem: 
....................             lcd_putc("\fIslem Seciniz\n<-Ekle     Sil->"); 
0699:  CLRF   39
069A:  MOVF   39,W
069B:  CALL   0DA
069C:  IORLW  00
069D:  BTFSC  03.2
069E:  GOTO   6A3
069F:  INCF   39,F
06A0:  MOVWF  3E
06A1:  CALL   217
06A2:  GOTO   69A
....................             secim2=secimbekle(); 
06A3:  CALL   4CD
06A4:  MOVF   78,W
06A5:  MOVWF  32
....................             switch(secim2){ 
06A6:  MOVF   32,W
06A7:  BTFSC  03.2
06A8:  GOTO   6B0
06A9:  XORLW  01
06AA:  BTFSC  03.2
06AB:  GOTO   6B3
06AC:  XORLW  03
06AD:  BTFSC  03.2
06AE:  GOTO   734
06AF:  GOTO   7E1
....................             case 0: 
....................             reset_cpu(); 
06B0:  CLRF   0A
06B1:  GOTO   000
....................             break; 
06B2:  GOTO   7E1
....................             case 1: 
....................             //MASTER KAYIT'I SECTI 
.................... 				yer = bosyerayarla(); 
06B3:  CALL   24C
06B4:  MOVF   78,W
06B5:  MOVWF  38
.................... 				if(yer==0x08){						//Yer Yok 
06B6:  MOVF   38,W
06B7:  SUBLW  08
06B8:  BTFSS  03.2
06B9:  GOTO   6CD
.................... 				lcd_putc("Bos Yer Yok!"); 
06BA:  CLRF   39
06BB:  MOVF   39,W
06BC:  CALL   0FE
06BD:  IORLW  00
06BE:  BTFSC  03.2
06BF:  GOTO   6C4
06C0:  INCF   39,F
06C1:  MOVWF  3E
06C2:  CALL   217
06C3:  GOTO   6BB
.................... 				delay_ms(1000); 
06C4:  MOVLW  04
06C5:  MOVWF  39
06C6:  MOVLW  FA
06C7:  MOVWF  44
06C8:  CALL   197
06C9:  DECFSZ 39,F
06CA:  GOTO   6C6
.................... 				reset_cpu(); 
06CB:  CLRF   0A
06CC:  GOTO   000
.................... 				} 
.................... 				if(yer==0x09) reset_cpu();		// Master Yok nasý girmiþ? 
06CD:  MOVF   38,W
06CE:  SUBLW  09
06CF:  BTFSS  03.2
06D0:  GOTO   6D3
06D1:  CLRF   0A
06D2:  GOTO   000
.................... 				kayit: 
.................... 				lcd_putc("\fYeni TOM'u\ndokundurun"); 			//Harici durumlar 
06D3:  CLRF   39
06D4:  MOVF   39,W
06D5:  CALL   10F
06D6:  IORLW  00
06D7:  BTFSC  03.2
06D8:  GOTO   6DD
06D9:  INCF   39,F
06DA:  MOVWF  3E
06DB:  CALL   217
06DC:  GOTO   6D4
....................             for(i=0;i<bekleme;i++){ 
06DD:  CLRF   30
06DE:  MOVF   30,W
06DF:  SUBLW  4F
06E0:  BTFSS  03.0
06E1:  GOTO   733
....................             delay_ms(100); 
06E2:  MOVLW  64
06E3:  MOVWF  44
06E4:  CALL   197
.................... 				butonoku(buffer,presenceCheck); 
06E5:  MOVLW  28
06E6:  MOVWF  39
06E7:  MOVF   35,W
06E8:  MOVWF  41
06E9:  CALL   319
.................... 				if(presenceCheck!=0xFF){ 
06EA:  INCFSZ 35,W
06EB:  GOTO   6ED
06EC:  GOTO   731
.................... 				if(eepromkarsilastir(buffer)!=0){ 
06ED:  MOVLW  28
06EE:  MOVWF  3B
06EF:  CALL   408
06F0:  MOVF   78,F
06F1:  BTFSC  03.2
06F2:  GOTO   70D
.................... 				lcd_putc("\fZaten Kayitli."); 
06F3:  CLRF   39
06F4:  MOVF   39,W
06F5:  CALL   12A
06F6:  IORLW  00
06F7:  BTFSC  03.2
06F8:  GOTO   6FD
06F9:  INCF   39,F
06FA:  MOVWF  3E
06FB:  CALL   217
06FC:  GOTO   6F4
.................... 				for(i=0;i<2;i++) delay_ms(1000); 
06FD:  CLRF   30
06FE:  MOVF   30,W
06FF:  SUBLW  01
0700:  BTFSS  03.0
0701:  GOTO   70B
0702:  MOVLW  04
0703:  MOVWF  39
0704:  MOVLW  FA
0705:  MOVWF  44
0706:  CALL   197
0707:  DECFSZ 39,F
0708:  GOTO   704
0709:  INCF   30,F
070A:  GOTO   6FE
.................... 				goto kayit; 
070B:  GOTO   6D3
.................... 				}else{ 
070C:  GOTO   731
.................... 				eepromyaz(yer*0x08,buffer); 
070D:  RLF    38,W
070E:  MOVWF  39
070F:  RLF    39,F
0710:  RLF    39,F
0711:  MOVLW  F8
0712:  ANDWF  39,F
0713:  MOVF   39,W
0714:  MOVWF  3A
0715:  MOVLW  28
0716:  MOVWF  3B
0717:  CALL   3DF
.................... 				lcd_putc("\fKaydedildi."); 
0718:  CLRF   39
0719:  MOVF   39,W
071A:  CALL   13E
071B:  IORLW  00
071C:  BTFSC  03.2
071D:  GOTO   722
071E:  INCF   39,F
071F:  MOVWF  3E
0720:  CALL   217
0721:  GOTO   719
.................... 				for(i=0;i<2;i++) delay_ms(1000); 
0722:  CLRF   30
0723:  MOVF   30,W
0724:  SUBLW  01
0725:  BTFSS  03.0
0726:  GOTO   730
0727:  MOVLW  04
0728:  MOVWF  39
0729:  MOVLW  FA
072A:  MOVWF  44
072B:  CALL   197
072C:  DECFSZ 39,F
072D:  GOTO   729
072E:  INCF   30,F
072F:  GOTO   723
.................... 				goto islem; 
0730:  GOTO   699
.................... 				} 
.................... 				} 
....................  
.................... 				} 
0731:  INCF   30,F
0732:  GOTO   6DE
....................             break; 
0733:  GOTO   7E1
....................             case 2: 
....................             //MASTER SIL'I SECTI 
....................             k=0; 
0734:  CLRF   33
....................             sil: 
....................             eepromoku(k); 
0735:  MOVF   33,W
0736:  MOVWF  39
0737:  GOTO   525
.................... 				lcd_putc("\n<-Sonraki  Sil->"); 
0738:  CLRF   39
0739:  MOVF   39,W
073A:  CALL   14F
073B:  IORLW  00
073C:  BTFSC  03.2
073D:  GOTO   742
073E:  INCF   39,F
073F:  MOVWF  3E
0740:  CALL   217
0741:  GOTO   739
....................             for(i=0;i<bekleme;i++){ 
0742:  CLRF   30
0743:  MOVF   30,W
0744:  SUBLW  4F
0745:  BTFSS  03.0
0746:  GOTO   7DE
....................             delay_ms(100); 
0747:  MOVLW  64
0748:  MOVWF  44
0749:  CALL   197
....................             if(input(switch1)){ 
074A:  BSF    03.5
074B:  BSF    05.0
074C:  BCF    03.5
074D:  BTFSS  05.0
074E:  GOTO   769
.................... 				for(l=0;l<bekleme;l++){ 
074F:  CLRF   34
0750:  MOVF   34,W
0751:  SUBLW  4F
0752:  BTFSS  03.0
0753:  GOTO   75E
.................... 				delay_ms(100); 
0754:  MOVLW  64
0755:  MOVWF  44
0756:  CALL   197
.................... 				if(!input(switch1)) 
0757:  BSF    03.5
0758:  BSF    05.0
0759:  BCF    03.5
075A:  BTFSS  05.0
.................... 				goto arttir; 
075B:  GOTO   760
.................... 				} 
075C:  INCF   34,F
075D:  GOTO   750
.................... 				reset_cpu(); 
075E:  CLRF   0A
075F:  GOTO   000
.................... 				arttir: 
....................             if(k==eeprom_byte-1){ 
0760:  MOVF   33,W
0761:  SUBLW  0F
0762:  BTFSS  03.2
0763:  GOTO   766
....................             k=0;} 
0764:  CLRF   33
....................             else{ 
0765:  GOTO   768
....................             k+=1;} 
0766:  MOVLW  01
0767:  ADDWF  33,F
....................             goto sil; 
0768:  GOTO   735
....................             }if(input(switch2)){ 
0769:  BSF    03.5
076A:  BSF    05.1
076B:  BCF    03.5
076C:  BTFSS  05.1
076D:  GOTO   7DC
.................... 				for(l=0;l<bekleme;l++){ 
076E:  CLRF   34
076F:  MOVF   34,W
0770:  SUBLW  4F
0771:  BTFSS  03.0
0772:  GOTO   7DC
.................... 				delay_ms(100); 
0773:  MOVLW  64
0774:  MOVWF  44
0775:  CALL   197
.................... 				if(!input(switch2)){ 
0776:  BSF    03.5
0777:  BSF    05.1
0778:  BCF    03.5
0779:  BTFSC  05.1
077A:  GOTO   7DA
.................... 				//silme iþlemi yap 
.................... 				printf(lcd_putc,"\f%X Emin misiniz?\n<-Evet   Hayir->",k); 
077B:  MOVLW  0C
077C:  MOVWF  3E
077D:  CALL   217
077E:  MOVF   33,W
077F:  MOVWF  3C
0780:  MOVLW  37
0781:  MOVWF  3D
0782:  CALL   504
0783:  MOVLW  03
0784:  MOVWF  39
0785:  MOVF   39,W
0786:  CALL   165
0787:  INCF   39,F
0788:  MOVWF  77
0789:  MOVWF  3E
078A:  CALL   217
078B:  MOVLW  18
078C:  SUBWF  39,W
078D:  BTFSS  03.2
078E:  GOTO   785
078F:  MOVLW  03
0790:  MOVWF  3A
0791:  MOVLW  20
0792:  MOVWF  3E
0793:  CALL   217
0794:  DECFSZ 3A,F
0795:  GOTO   791
0796:  MOVLW  18
0797:  MOVWF  3B
0798:  MOVF   3B,W
0799:  CALL   165
079A:  INCF   3B,F
079B:  MOVWF  77
079C:  MOVWF  3E
079D:  CALL   217
079E:  MOVLW  1F
079F:  SUBWF  3B,W
07A0:  BTFSS  03.2
07A1:  GOTO   798
.................... 				secim2 = secimbekle(); 
07A2:  CALL   4CD
07A3:  MOVF   78,W
07A4:  MOVWF  32
.................... 				switch(secim2){ 
07A5:  MOVF   32,W
07A6:  XORLW  01
07A7:  BTFSC  03.2
07A8:  GOTO   7AD
07A9:  XORLW  03
07AA:  BTFSC  03.2
07AB:  GOTO   7D1
07AC:  GOTO   7D3
.................... 				case 1: 
.................... 				eepromyaz(k*0x08,Sil); 
07AD:  RLF    33,W
07AE:  MOVWF  39
07AF:  RLF    39,F
07B0:  RLF    39,F
07B1:  MOVLW  F8
07B2:  ANDWF  39,F
07B3:  MOVF   39,W
07B4:  MOVWF  3A
07B5:  MOVLW  20
07B6:  MOVWF  3B
07B7:  CALL   3DF
.................... 				lcd_putc("\fSilindi."); 
07B8:  CLRF   39
07B9:  MOVF   39,W
07BA:  CALL   189
07BB:  IORLW  00
07BC:  BTFSC  03.2
07BD:  GOTO   7C2
07BE:  INCF   39,F
07BF:  MOVWF  3E
07C0:  CALL   217
07C1:  GOTO   7B9
.................... 				delay_ms(1000); 
07C2:  MOVLW  04
07C3:  MOVWF  39
07C4:  MOVLW  FA
07C5:  MOVWF  44
07C6:  CALL   197
07C7:  DECFSZ 39,F
07C8:  GOTO   7C4
.................... 				if(k==0) reset_cpu(); 
07C9:  MOVF   33,F
07CA:  BTFSS  03.2
07CB:  GOTO   7CF
07CC:  CLRF   0A
07CD:  GOTO   000
.................... 				else goto islem; 
07CE:  GOTO   7D0
07CF:  GOTO   699
.................... 				break; 
07D0:  GOTO   7D3
.................... 				case 2: 
.................... 				goto sil; 
07D1:  GOTO   735
.................... 				break; 
07D2:  GOTO   7D3
.................... 				} 
.................... 				delay_ms(1000); 
07D3:  MOVLW  04
07D4:  MOVWF  39
07D5:  MOVLW  FA
07D6:  MOVWF  44
07D7:  CALL   197
07D8:  DECFSZ 39,F
07D9:  GOTO   7D5
.................... 				} 
.................... 				}} 
07DA:  INCF   34,F
07DB:  GOTO   76F
.................... 				} 
07DC:  INCF   30,F
07DD:  GOTO   743
....................             reset_cpu(); 
07DE:  CLRF   0A
07DF:  GOTO   000
....................  
....................  
....................  
....................             break; 
07E0:  GOTO   7E1
....................             } 
....................             break; 
07E1:  GOTO   7E4
....................             case 2: 
....................             //MASTER KAPIYI AC'I SECTI 
....................             yesil(); 
07E2:  CALL   55C
....................             break; 
07E3:  GOTO   7E4
....................             }}else 
07E4:  GOTO   7E6
.................... 				{ 
.................... 				//KAPIYI AÇ 
.................... 				yesil(); 
07E5:  CALL   55C
.................... 				}} 
.................... 	         else{ 
07E6:  GOTO   7E8
....................    	      //KAYITLI DEGIL 
....................  
....................         		kirmizi(); 
07E7:  GOTO   578
....................          	} 
....................  
....................  
.................... 				}}} 
07E8:  GOTO   5E0
07E9:  SLEEP

Configuration Fuses:
   Word  1: 3F78   NOWDT NOPUT NOPROTECT BROWNOUT MCLR NOLVP INTRC_IO NOCPD
